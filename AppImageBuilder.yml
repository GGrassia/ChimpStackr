version: 1

script:
  # Remove any previous build
  - rm -rf $TARGET_APPDIR  | true
  # Make usr and icons dirs
  - mkdir -p AppDir/usr AppDir/usr/share/icons/128x128/
  # Copy icons in correct folder
  - cp packaging/icons/icon_128x128.png AppDir/usr/share/icons
  # Copy the python application code into the AppDir
  - cp src AppDir/usr -r

  # Install application dependencies
  - python3 -m pip install --ignore-installed --prefix=/usr --root=AppDir -r ./requirements.txt

  # - rm -rf AppDir/usr/lib/python3.8/site-packages/PySide6/Qt/qml/
  # - rm -rf AppDir/usr/lib/python3.8/site-packages/PySide6/examples/
  # - rm -rf AppDir/usr/lib/python3.8/site-packages/PySide6/Qt/resources/
  # - rm -rf AppDir/usr/lib/python3.8/site-packages/PySide6/Qt/translations/qtwebengine_locales/
  # - rm -f AppDir/usr/lib/python3.8/site-packages/PySide6/{assistant,designer,linguist,lrelease,lupdate}
  # - rm -f AppDir/usr/lib/python3.8/site-packages/PySide6/{Qt3D*,QtBluetooth*,QtCharts*,QtConcurrent*,QtDataVisualization*,QtDBus*,QtDesigner*,QtHelp*,QtMultimedia*,QtNetwork*,QtOpenGL*,QtPositioning*,QtPrintSupport*,QtQml*,QtQuick*,QtRemoteObjects*,QtScxml*,QtSensors*,QtSerialPort*,QtSql*,QtStateMachine*,QtSvg*,QtTest*,QtWeb*,QtXml*}
  # - shopt -s extglob
  # - rm -rf AppDir/usr/lib/python3.8/site-packages/PySide6/Qt/lib/!(libQt6OpenGL*|libQt6XcbQpa*|libQt6Wayland*|libQt6Egl*|libicudata*|libicuuc*|libicui18n*|libQt6DBus*|libQt6Network*|libQt6Qml*|libQt6Core*|libQt6Gui*|libQt6Widgets*|libQt6Svg*|libQt6UiTools*)

  #- python3 -m pip install --prefix=/usr --root=AppDir -r <(sed '/^[rawpy|pkg2]/d' requirements.txt)
  # Install rawpy
  #- python3 -m pip install --ignore-installed  --prefix=/usr --root=AppDir --pre rawpy
  # - cd $TARGET_APPDIR
  # - git clone https://github.com/letmaik/rawpy
  # - cd rawpy
  # - python3 -m pip install numpy cython
  # - python3 -m pip install .
AppDir:
  path: ./AppDir

  app_info:
    id: org.noah-peeters.chimpstackr
    name: ChimpStackr
    icon: icon_128x128
    version: latest
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/src/run.py $@"

  apt:
    arch: amd64
    allow_unauthenticated: true
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'
      # Qt 6
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
      - sourceline: deb http://security.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
    include:
      - python3
      - python3-pkg-resources
      # Use "appmenu-gtk3-module:amd64"??
      - appmenu-gtk2-module # https://askubuntu.com/questions/1074926/failed-to-load-module-appmenu-gtk-module-canberra-gtk-module
      # Specific dependencies for pip packages
      - python3-opencv # For opencv
      #- libraw-bin # For rawpy
      - libraw-dev

      - python3-numpy

      # Qt 6 dependencies
      - libcap2:amd64
      - libcom-err2:amd64
      - libdbus-1-3:amd64
      - libgpg-error0:amd64
      - libgtk-3-common
      - libkeyutils1:amd64
      - libllvm13
      - liblzma5:amd64
      - libpcre3:amd64
      - libqt6gui6
      - libqt6qml6
      - libqt6qmlworkerscript6
      - libqt6quick6
      - libselinux1:amd64
      - libtinfo6:amd64
      - qml6-module-qtqml-workerscript:amd64
      - qml6-module-qtquick:amd64
      - qt6-gtk-platformtheme:amd64
      - qt6-qpa-plugins:amd64
      # x11
      - libx11-6
      - libx11-xcb1
      - libxcb1
      - libxcb-render0
      - libxcb-xfixes0
      - libxcb-shape0
      - libxcb-dri2-0
      - libxcb-shm0
      - libxcb-glx0
      - libxcb-present0
      - libxcb-dri3-0
      # graphic libraries interface (safe graphics bundle including drivers, acceleration may not work in some systems)
      - libglvnd0
      - libglx0
      - libglapi-mesa
      - libgl1
      - libegl1
      - libgbm1
      - libdrm2
      - libglx-mesa0
      - libgl1-amber-dri
      - libgl1-mesa-dri
      - mesa-utils
      - libgl1-mesa-glx
      - libdrm-amdgpu1
      - libdrm-nouveau2
    exclude: []

  runtime:
    env:
      PATH: '${APPDIR}/usr/bin:${PATH}'
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'

  test:
  #   fedora:
  #     image: appimagecrafters/tests-env:fedora-30
  #     command: ./AppRun
  #   debian:
  #     image: appimagecrafters/tests-env:debian-stable
  #     command: ./AppRun
  #   arch:
  #     image: appimagecrafters/tests-env:archlinux-latest
  #     command: ./AppRun
  #   centos:
  #     image: appimagecrafters/tests-env:centos-7
  #     command: ./AppRun
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: true

AppImage:
  update-information: 'gh-releases-zsync|AppImageCrafters|python-appimage-example|latest|python-appimage-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64